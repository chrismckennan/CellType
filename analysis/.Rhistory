#L.hat <- out.ML$L %*% solve(Lambda.h)
L.hat <- out.ML$L
C.1 <- C[ind.1,] %*% solve(Lambda.h)
C.2 <- C[-ind.1,] %*% solve(Lambda.h)
L.hat.scale <- L.hat %*% solve(Lambda.h)
L.hat.ols <- M %*% orthog.x %*% C %*% solve(t(C) %*% orthog.x %*% C)
diff.partial <- cbind(((L.hat.scale - L)[1:floor(p * (1/n)),])^2) * n
diff.ols.1 <- (M[1:floor(p * (1/n)),ind.1] %*% orthog.1 %*% C[ind.1,] %*% solve(t(C[ind.1,]) %*% orthog.1 %*% C[ind.1,]) - L[1:(p/n),])^2 * n.1
diff.ols <- cbind(L.hat.ols[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),])^2 * n
diff.ols.partial <- cbind(L.hat.ols[1:floor(p * (1/n)),] - L.hat.scale[1:floor(p * (1/n)),])^2 * n
risk.est.partial <- sqrt(apply(diff.partial, 2, mean))
risk.est.1 <- sqrt(apply(diff.ols.1, 2, mean))
risk.est.all <- sqrt(apply(diff.ols, 2, mean))
sqrt(mean(diff.ols.partial))
hist(sqrt(diff.ols.partial))
risk.est.partial
risk.est.all
n <- 450
n.1 <- floor(n/2)
n.2 <- n - n.1
p <- 3e5
K <- 1
X <- cbind(rep(1, n), rbinom(n, size=1, prob=0.5))  #n x d
d <- ncol(X)
C <- matrix(rnorm(n*K), nrow=n, ncol=K) #n x K
Sigma <- rep(1, p)
L <- rbind(matrix(rnorm(K * floor(p * (1/n))), nrow=p*(1/n), ncol=K), matrix(0, nrow=p - floor(p * (1/n)), ncol=K)) * sqrt(2)
L <- L %*% svd(t(L / Sigma) %*% L)$v
ind.1 <- sort(sample((1:n), size=n.1, replace = F))
M <- L %*% t(C) + matrix(rnorm(p*n), nrow=p, ncol=n) * sqrt(Sigma)
orthog.1 <- diag(n.1) - X[ind.1,] %*% solve(t(X[ind.1,]) %*% X[ind.1,], t(X[ind.1,]))
Q.X2 <- qr.Q(qr(X[-ind.1,]), complete=T)[,(d+1):(n-n.1)]
orthog.x <- diag(n) - X %*% solve(t(X) %*% X, t(X))
C.1 <- C[ind.1,]
C.2 <- C[-ind.1,]
Lambda.all <- t(C %*% solve(Lambda.h)) %*% orthog.x %*% C %*% solve(Lambda.h) / (n - d)
Lambda.1 <- t(C.1) %*% (diag(n.1) - X[ind.1,] %*% solve(t(X[ind.1,]) %*% X[ind.1,], t(X[ind.1,]))) %*% C.1 / (n.1 - d)
Lambda.2 <- t(C.2) %*% (diag(n.2) - X[-ind.1,] %*% solve(t(X[-ind.1,]) %*% X[-ind.1,], t(X[-ind.1,]))) %*% C.2 / (n.2 - d)
out.ML <- Correct.CellType.Sigma(M=M, X=X, C=C, ind.1=ind.1, K.use=K, Sigma=Sigma)
Lambda <- out.ML$Lambda
Lambda.h <- out.ML$Lambda.h
#L.hat <- out.ML$L %*% solve(Lambda.h)
L.hat <- out.ML$L
C.1 <- C[ind.1,] %*% solve(Lambda.h)
C.2 <- C[-ind.1,] %*% solve(Lambda.h)
L.hat.scale <- L.hat %*% solve(Lambda.h)
L.hat.ols <- M %*% orthog.x %*% C %*% solve(t(C) %*% orthog.x %*% C)
diff.partial <- cbind(((L.hat.scale - L)[1:floor(p * (1/n)),])^2) * n
diff.ols.1 <- (M[1:floor(p * (1/n)),ind.1] %*% orthog.1 %*% C[ind.1,] %*% solve(t(C[ind.1,]) %*% orthog.1 %*% C[ind.1,]) - L[1:(p/n),])^2 * n.1
diff.ols <- cbind(L.hat.ols[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),])^2 * n
diff.ols.partial <- cbind(L.hat.ols[1:floor(p * (1/n)),] - L.hat.scale[1:floor(p * (1/n)),])^2 * n
risk.est.partial <- sqrt(apply(diff.partial, 2, mean))
risk.est.1 <- sqrt(apply(diff.ols.1, 2, mean))
risk.est.all <- sqrt(apply(diff.ols, 2, mean))
risk.est.partial
risk.est.all
sqrt(mean(diff.ols.partial))
hist(sqrt(diff.ols.partial))
Lambda.1
Lambda.2
sqrt(n) * solve(t(C) %*% orthog.x %*% C)
n <- 1e3
n.1 <- floor(n/2)
n.2 <- n - n.1
p <- 5e5
K <- 1
X <- cbind(rep(1, n), rbinom(n, size=1, prob=0.5))  #n x d
d <- ncol(X)
C <- matrix(rnorm(n*K), nrow=n, ncol=K) #n x K
Sigma <- rep(1, p)
L <- rbind(matrix(rnorm(K * floor(p * (1/n))), nrow=p*(1/n), ncol=K), matrix(0, nrow=p - floor(p * (1/n)), ncol=K)) * sqrt(2)
L <- L %*% svd(t(L / Sigma) %*% L)$v
ind.1 <- sort(sample((1:n), size=n.1, replace = F))
M <- L %*% t(C) + matrix(rnorm(p*n), nrow=p, ncol=n) * sqrt(Sigma)
orthog.1 <- diag(n.1) - X[ind.1,] %*% solve(t(X[ind.1,]) %*% X[ind.1,], t(X[ind.1,]))
Q.X2 <- qr.Q(qr(X[-ind.1,]), complete=T)[,(d+1):(n-n.1)]
orthog.x <- diag(n) - X %*% solve(t(X) %*% X, t(X))
C.1 <- C[ind.1,]
C.2 <- C[-ind.1,]
Lambda.all <- t(C %*% solve(Lambda.h)) %*% orthog.x %*% C %*% solve(Lambda.h) / (n - d)
Lambda.1 <- t(C.1) %*% (diag(n.1) - X[ind.1,] %*% solve(t(X[ind.1,]) %*% X[ind.1,], t(X[ind.1,]))) %*% C.1 / (n.1 - d)
Lambda.2 <- t(C.2) %*% (diag(n.2) - X[-ind.1,] %*% solve(t(X[-ind.1,]) %*% X[-ind.1,], t(X[-ind.1,]))) %*% C.2 / (n.2 - d)
out.ML <- Correct.CellType.Sigma(M=M, X=X, C=C, ind.1=ind.1, K.use=K, Sigma=Sigma)
Lambda <- out.ML$Lambda
Lambda.h <- out.ML$Lambda.h
#L.hat <- out.ML$L %*% solve(Lambda.h)
L.hat <- out.ML$L
C.1 <- C[ind.1,] %*% solve(Lambda.h)
C.2 <- C[-ind.1,] %*% solve(Lambda.h)
L.hat.scale <- L.hat %*% solve(Lambda.h)
L.hat.ols <- M %*% orthog.x %*% C %*% solve(t(C) %*% orthog.x %*% C)
diff.partial <- cbind(((L.hat.scale - L)[1:floor(p * (1/n)),])^2) * n
diff.ols.1 <- (M[1:floor(p * (1/n)),ind.1] %*% orthog.1 %*% C[ind.1,] %*% solve(t(C[ind.1,]) %*% orthog.1 %*% C[ind.1,]) - L[1:(p/n),])^2 * n.1
diff.ols <- cbind(L.hat.ols[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),])^2 * n
diff.ols.partial <- cbind(L.hat.ols[1:floor(p * (1/n)),] - L.hat.scale[1:floor(p * (1/n)),])^2 * n
risk.est.partial <- sqrt(apply(diff.partial, 2, mean))
risk.est.1 <- sqrt(apply(diff.ols.1, 2, mean))
risk.est.all <- sqrt(apply(diff.ols, 2, mean))
risk.est.partial
risk.est.all
sqrt(mean(diff.ols.partial))
hist(sqrt(diff.ols.partial))
mean((L.hat.scale - L)[1:floor(p * (1/n)),])
mean((L.hat.scale - L)[1:floor(p * (1/n)),]) * sqrt(n)
mean(L.hat.ols[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),])
1/n
p/n
n/p
0.9855433 - 0.985504
sqrt(0.9855433 - 0.985504)
1/n
risk.est.partial^2 - risk.est.all^2
sqrt(risk.est.partial^2 - risk.est.all^2)
sqrt(1/n)
0.008804009/0.03162278
n/p
hist(sqrt(diff.partial))
hist(sqrt(diff.ols))
sqrt(n)
p/n
p/n/sqrt(n)
p/n
n/p
sqrt(n/p)
sqrt(1/n)
mean(diff.ols.partial)
sqrt(0.002249713)
mean(sqrt(diff.ols.partial))
hist((L.hat.scale - L)[1:floor(p * (1/n)),] * sqrt(n))
hist((L.hat.ols[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),]) * sqrt(n))
diff.partial <- cbind(((L.hat.scale - L))^2) * n
diff.ols <- cbind(L.hat.ols - L)^2 * n
sqrt(apply(diff.partial, 2, mean))
sqrt(apply(diff.ols, 2, mean))
diff.partial <- cbind(((L.hat.scale - L)[1:floor(p * (1/n)),])^2) * n
diff.ols.1 <- (M[1:floor(p * (1/n)),ind.1] %*% orthog.1 %*% C[ind.1,] %*% solve(t(C[ind.1,]) %*% orthog.1 %*% C[ind.1,]) - L[1:(p/n),])^2 * n.1
diff.ols <- cbind(L.hat.ols[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),])^2 * n
diff.ols.partial <- cbind(L.hat.ols[1:floor(p * (1/n)),] - L.hat.scale[1:floor(p * (1/n)),])^2 * n
risk.est.partial <- sqrt(apply(diff.partial, 2, mean))
risk.est.1 <- sqrt(apply(diff.ols.1, 2, mean))
risk.est.all <- sqrt(apply(diff.ols, 2, mean))
diff.ols.partial <- cbind(L.hat.ols - L.hat.scale)^2 * n
hist(sqrt(diff.ols.partial))
sqrt(1/n)
sqrt(n/p)
sd(sqrt(diff.ols.partial))
sqrt(mean(diff.ols.partial))
0.03935925 * sqrt(2)
sqrt(n/p)
sqrt(n/p/sqrt(n))
sqrt(n/p*sqrt(n))
1/sqrt(n)
Lambda.1
Lambda.2
1/sqrt(n/2)
t(C.2) %*% (diag(n.2) - X[-ind.1,] %*% solve(t(X[-ind.1,]) %*% X[-ind.1,], t(X[-ind.1,]))) %*% C.2 / (n.2 - d)
C.1 <- C[ind.1,]
C.2 <- C[-ind.1,]
t(C.2) %*% (diag(n.2) - X[-ind.1,] %*% solve(t(X[-ind.1,]) %*% X[-ind.1,], t(X[-ind.1,]))) %*% C.2 / (n.2 - d)
t(C.1) %*% (diag(n.1) - X[ind.1,] %*% solve(t(X[ind.1,]) %*% X[ind.1,], t(X[ind.1,]))) %*% C.1 / (n.1 - d)
n.2 - d
dim(C.2)
length(C.2)
dim(X[ind.1,])
dim(X[-ind.1,])
file.create("../data/Simulations_160920", "X.tmp")
paste(dir.sim, X.txt, sep="//")
dir.sim <- "../data/Simulations_160920"
dir.out <- "../output/Simulations_160920"
paste(dir.sim, X.txt, sep="//")
paste(dir.sim, "X.txt"", sep="//")
paste(dir.sim, "X.txt"", sep="/")
dir.sim
paste(dir.sim, "X.txt"", sep="\/")
paste(dir.sim, "X.txt", sep="//")
paste(dir.sim, "X.txt", sep="/")
dim(C)
out.ML$turbo$itr
out.ML$turbo$convergence
out.ML$turbo$value.objfn
dir.sim <- "../data/Simulations_160920"
dir.out <- "../output/Simulations_160920"
write.table(X, file=paste(dir.sim, "X.txt", sep="/"), sep="\t")
write.table(C, file=paste(dir.sim, "C.txt", sep="/"), sep="\t")
write.table(M, file=paste(dir.sim, "M.txt", sep="/"), sep="\t")
wite.table(cbind(ind.1), file=paste(dir.sim, "ind.1.txt", sep="/"), sep="\t")
write.table(cbind(ind.1), file=paste(dir.sim, "ind.1.txt", sep="/"), sep="\t")
sqrt(n/p)
sqrt(1/n)
sqrt(n) * (t(L.hat.scale / Sigma) %*% L.hat.scale - 1 - t(L) %*% L) * n / p
sqrt(n) * (t(L.hat.scale / Sigma) %*% L.hat.scale - n/p - t(L) %*% L) * n / p
sqrt(n) * (t(L.hat.scale / Sigma) %*% L.hat.scale - p/n - t(L) %*% L) * n / p
sqrt(n) * (t(L.hat.ols / Sigma) %*% L.hat.ols - p/n - t(L) %*% L) * n / p
sqrt(n) * (t(L.hat.ols / Sigma) %*% L.hat.ols * n / p - 1 - t(L) %*% L * n / p)
p
n
sqrt(n-d) * (t(L.hat.ols / Sigma) %*% L.hat.ols * (n-d) / p - 1 - t(L) %*% L * (n-d) / p)
t(L.hat.ols / Sigma) %*% L.hat.ols * (n-d) / p
t(L) %*% L * (n-d) / p
L.hat.ols[1]
L.hat.scale[1]
dim(C)
write.table(L, file=paste(dir.sim, "L.txt", sep="/"), sep="\t")
dim(orthog.x)
dir.out
write.table(L.hat.scale, file=paste(dir.out, "L.hat.scale.txt", sep="/"))
write.table(L.hat.ols, file=paste(dir.out, "L.hat.ols.txt", sep="/"))
sqrt(n/p)
sqrt(p/n)
t(C) %*% orthog.x %*% C / (n - d)
1/sqrt(p)
E.tilde <- L.hat.ols - L
E.tilde[1]
t(L / Sigma) %*% E.tilde * n/p
t(E.tilde / E.tilde) * n / p
dim()
dim(E.tilde)
t(E.tilde / Sigma) %*% E.tilde / p * n
sd(E.tilde)
1/sqrt(n)
t(E.tilde / Sigma) %*% E.tilde / p
t(E.tilde / Sigma) %*% E.tilde / p * n
tmp <- rnorm(1000) * sqrt(1/50)
sum(tmp * tmp) / 1000
sum(tmp * tmp) / 1000 * sqrt(50)
sum(tmp * tmp) / 1000 * 50
sqrt(n) * sqrt(n/p)
sqrt(50) * sqrt(50/1000)
1/sqrt(1000)
tmp <- rnorm(p) * sqrt(1/n)
sum(tmp * tmp) / p * n
(1 - sum(tmp * tmp) / p * n) * sqrt(n)
sqrt(n/p)
out.ML$turbo$fpeval
out.ML$turbo$objfeval
out.ML$turbo$trace.objfval
out.ML$turbo$pconstr
Lambda.2
Labdam.1
Lambda.1
1.093769 / 0.9912527
Lambda.2.hat <- diag(1, nrow=K, ncol=K)
R.2.hat.start <- svd(Lambda.2.hat)$v %*% diag(sqrt(svd(Lambda.2.hat)$d), nrow=K, ncol=K) %*% t(svd(Lambda.2.hat)$v)
D.hat <- matrix(optim(R.2.hat.start, fn=fun.bfgs, gr=grad.bfgs, method="BFGS", Sigma=Sigma, L=L.hat, norm.Y2=1/sqrt(n.2-d) * M[,-ind.1] %*% Q.X2)$par, nrow=K, ncol=K)
hist((L.hat.scale - L) * sqrt(n), prob=T, col="red", main="sqrt()")
hist((L.hat.scale[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),]) * sqrt(n), col="blue", prob=T, add=T)
hist((L.hat.scale - L) * sqrt(n), prob=T, col=rgb(1,0,0,0.5), main="Histogram")
hist((L.hat.scale[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),]) * sqrt(n), col=rgb(0,0,1,0.5), prob=T, add=T)
hist((L.hat.scale - L) * sqrt(n), prob=T, col=rgb(1,0,0,0.5), main="Histogram")
hist((L.hat.scale[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),]) * sqrt(n), col=rgb(0,0,1,0.5), prob=T, add=T)
hist((L.hat.scale[(floor(p * (1/n))+1):p,] - L[(floor(p * (1/n))+1):p,]) * sqrt(n), prob=T, col=rgb(1,0,0,0.5), main="Histogram Of ")
hist((L.hat.scale[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),]) * sqrt(n), col=rgb(0,0,1,0.5), prob=T, add=T)
hist((L.hat.scale[(floor(p * (1/n))+1):p,] - L[(floor(p * (1/n))+1):p,]) * sqrt(n), prob=T, col=rgb(1,0,0,0.5), main="Histogram of non-zero and zero components of L with POD", xlab="sqrt(n)*Bias")
hist((L.hat.scale[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),]) * sqrt(n), col=rgb(0,0,1,0.5), prob=T, add=T)
hist((L.hat.ols[(floor(p * (1/n))+1):p,] - L[(floor(p * (1/n))+1):p,]) * sqrt(n), prob=T, col=rgb(1,0,0,0.5), main="Histogram of non-zero and zero components of L with all data", xlab="sqrt(n)*Bias")
hist((L.hat.ols[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),]) * sqrt(n), col=rgb(0,0,1,0.5), prob=T, add=T)
mean((L.hat.scale[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),]) * sqrt(n))
sd((L.hat.scale[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),]) * sqrt(n))
mean((L.hat.ols[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),]) * sqrt(n))
hist(sqrt(n) * (L.hat.ols[1:floor(p * (1/n)),] - L.hat.scale[1:floor(p * (1/n)),]))
hist(sqrt(n) * (L.hat.ols - L.hat.scale))
mean(sqrt(n) * (L.hat.ols - L.hat.scale))
sd(sqrt(n) * (L.hat.ols - L.hat.scale))
L.hat.ols.1 <- M[,ind.1] %*% orthog.1 %*% C[ind.1,] %*% solve(t(C[ind.1,]) %*% orthog.1 %*% C[ind.1,])
hist(sqrt(n) * (L.hat.ols - L.hat.ols.1), main="Scaled Difference Between ")
hist(sqrt(n) * (L.hat.scale - L.hat.ols.1), main="Scaled Difference Between ")
sd(sqrt(n) * (L.hat.ols - L.hat.ols.1))
mean(sqrt(n) * (L.hat.ols - L.hat.ols.1))
t(X[ind.1,]) %*% X[-ind.1,] / n
tmp.C.1 <- orthog.1 %*% C[ind.1,]; tmp.C.2 <- C[-ind.1,] - X[-ind.1,] %*% solve(t(X[-ind.1,]) %*% X[-ind.1,]) %*% (t(X[-ind.1,]) %*% C[-ind.1])
dim(tmp.C.2)
dim(tmp.C.1)
M.tmp <- cbind(M[,ind.1], M[,-ind.1])
L.hat.ols.mod <- M[,ind.1] %*% tmp.C.1 %*% solve(t(tmp.C.1) %*% tmp.C.1) + M[,-ind.1] %*% tmp.C.2 %*% solve(t(tmp.C.2) %*% tmp.C.2)
hist(sqrt(n) * (L.hat.ols - L.hat.ols.mod), main="Scaled Difference Between OLS with all data and POD")
max(sqrt(n) * (L.hat.ols - L.hat.ols.mod))
mean(sqrt(n) * (L.hat.ols - L.hat.ols.mod))
sd(sqrt(n) * (L.hat.ols - L.hat.ols.mod))
tmp.C.2 <- C[-ind.1,] - X[-ind.1,] %*% solve(t(X[-ind.1,]) %*% X[-ind.1,]) %*% (t(X[-ind.1,]) %*% C[-ind.1,])
L.hat.ols.mod <- M[,ind.1] %*% tmp.C.1 %*% solve(t(tmp.C.1) %*% tmp.C.1) + M[,-ind.1] %*% tmp.C.2 %*% solve(t(tmp.C.2) %*% tmp.C.2)
hist(sqrt(n) * (L.hat.ols - L.hat.ols.mod), main="Scaled Difference Between OLS with all data and POD")
hist(sqrt(n) * (L.hat.ols - L.hat.scale), main="Scaled Difference Between OLS with all data and POD")
mean(tmp.C.1)
mean(tmp.C.2)
hist(sqrt(n) * (L.hat.ols - L.hat.ols.mod), main="Scaled Difference Between OLS with all data and POD", xlim=c(-5,5))
hist(sqrt(n) * (L.hat.ols - L.hat.ols.mod), main="Scaled Difference Between OLS with all data and POD", xlim=c(-2,2))
summary(sqrt(n) * (L.hat.ols - L.hat.ols.mod))
hist(sqrt(n) * (L.hat.ols - L.hat.ols.mod), main="Scaled Difference Between OLS with all data and POD", xlim=c(-10,10))
hist(sqrt(n) * (L.hat.ols - L.hat.ols.mod), main="Scaled Difference Between OLS with all data and POD", xlim=c(-20,20))
hist(sqrt(n) * (L.hat.ols - L.hat.ols.mod), main="Scaled Difference Between OLS with all data and POD", xlim=c(-5,5))
hist(sqrt(n) * (L.hat.ols - L.hat.ols.mod), main="Scaled Difference Between OLS with all data and POD", xlim=c(-0.2,0.2))
hist(sqrt(n) * (L.hat.ols - L.hat.ols.mod), main="Scaled Difference Between OLS with all data and POD", xlim=c(-0.2,0.2), breaks=90)
length(which(abs(sqrt(n) * (L.hat.ols - L.hat.ols.mod)) < 0.01))/p
length(which(abs(sqrt(n) * (L.hat.ols - L.hat.ols.mod)) < 0.1))/p
length(which(abs(sqrt(n) * (L.hat.ols - L.hat.ols.mod)) < 0.2))/p
length(which(abs(sqrt(n) * (L.hat.ols - L.hat.ols.mod)) < 0.6))/p
length(which(abs(sqrt(n) * (L.hat.ols - L.hat.ols.mod)) < 0.68))/p
length(which(abs(sqrt(n) * (L.hat.ols - L.hat.ols.mod)) < 1))/p
L.hat.ols.mod <- M[,ind.1] %*% tmp.C.1 %*% solve(t(tmp.C.1) %*% tmp.C.1 + t(tmp.C.2) %*% tmp.C.2) + M[,-ind.1] %*% tmp.C.2 %*% solve(t(tmp.C.1) %*% tmp.C.1 + t(tmp.C.2) %*% tmp.C.2)
summary(sqrt(n) * (L.hat.ols - L.hat.ols.mod))
hist(sqrt(n) * (L.hat.ols - L.hat.ols.mod))
hist(sqrt(n) * (L.hat.ols.mod - L.hat.scale), main="Scaled Difference Between OLS with all data and POD")
hist(sqrt(n) * (L.hat.ols.mod - L.hat.scale), main="Scaled Difference Between OLS with all data and POD")
hist((L.hat.scale[(floor(p * (1/n))+1):p,] - L[(floor(p * (1/n))+1):p,]) * sqrt(n), prob=T, col=rgb(1,0,0,0.5), main="Histogram of non-zero and zero components of L with POD", xlab="sqrt(n)*Bias") #red is parts of L that are 0
hist((L.hat.scale[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),]) * sqrt(n), col=rgb(0,0,1,0.5), prob=T, add=T) #blue is parts of L that are non-zero
hist((L.hat.ols[(floor(p * (1/n))+1):p,] - L[(floor(p * (1/n))+1):p,]) * sqrt(n), prob=T, col=rgb(1,0,0,0.5), main="Histogram of non-zero and zero components of L with all data", xlab="sqrt(n)*Bias")
hist((L.hat.ols[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),]) * sqrt(n), col=rgb(0,0,1,0.5), prob=T, add=T)
hist((L.hat.scale[(floor(p * (1/n))+1):p,] - L[(floor(p * (1/n))+1):p,]) * sqrt(n), prob=T, col=rgb(1,0,0,0.5), main="Histogram of non-zero and zero components of L with POD", xlab="sqrt(n)*Bias") #red is parts of L that are 0
hist((L.hat.scale[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),]) * sqrt(n), col=rgb(0,0,1,0.5), prob=T, add=T)
hist((L.hat.ols[(floor(p * (1/n))+1):p,] - L[(floor(p * (1/n))+1):p,]) * sqrt(n), prob=T, col=rgb(1,0,0,0.5), main="Histogram of non-zero and zero components of L with all data", xlab="sqrt(n)*Bias")
hist((L.hat.ols[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),]) * sqrt(n), col=rgb(0,0,1,0.5), prob=T, add=T)
diff.ols <- cbind(L.hat.ols.mod[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),])^2 * n
sqrt(apply(diff.ols, 2, mean))
sqrt(apply(diff.partial, 2, mean))
n <- 300
n.1 <- floor(n/2)
n.2 <- n - n.1
p <- 1e5
K <- 2
X <- cbind(rep(1, n), rbinom(n, size=1, prob=0.5))  #n x d
d <- ncol(X)
C <- matrix(rnorm(n*K), nrow=n, ncol=K) #n x K
Sigma <- rep(1, p)
L <- rbind(matrix(rnorm(K * floor(p * (1/n))), nrow=p*(1/n), ncol=K), matrix(0, nrow=p - floor(p * (1/n)), ncol=K)) * sqrt(2)
L <- L %*% svd(t(L / Sigma) %*% L)$v
ind.1 <- sort(sample((1:n), size=n.1, replace = F))
M <- L %*% t(C) + matrix(rnorm(p*n), nrow=p, ncol=n) * sqrt(Sigma)
orthog.1 <- diag(n.1) - X[ind.1,] %*% solve(t(X[ind.1,]) %*% X[ind.1,], t(X[ind.1,]))
Q.X2 <- qr.Q(qr(X[-ind.1,]), complete=T)[,(d+1):(n-n.1)]
orthog.x <- diag(n) - X %*% solve(t(X) %*% X, t(X))
C.1 <- C[ind.1,]
C.2 <- C[-ind.1,]
Lambda.all <- t(C %*% solve(Lambda.h)) %*% orthog.x %*% C %*% solve(Lambda.h) / (n - d)
Lambda.1 <- t(C.1) %*% (diag(n.1) - X[ind.1,] %*% solve(t(X[ind.1,]) %*% X[ind.1,], t(X[ind.1,]))) %*% C.1 / (n.1 - d)
Lambda.2 <- t(C.2) %*% (diag(n.2) - X[-ind.1,] %*% solve(t(X[-ind.1,]) %*% X[-ind.1,], t(X[-ind.1,]))) %*% C.2 / (n.2 - d)
out.ML <- Correct.CellType.Sigma(M=M, X=X, C=C, ind.1=ind.1, K.use=K, Sigma=Sigma)
Lambda <- out.ML$Lambda
Lambda.h <- out.ML$Lambda.h
#L.hat <- out.ML$L %*% solve(Lambda.h)
L.hat <- out.ML$L
C.1 <- C[ind.1,] %*% solve(Lambda.h)
C.2 <- C[-ind.1,] %*% solve(Lambda.h)
L.hat.scale <- L.hat %*% solve(Lambda.h)
####OLS Estimate####
#A.tmp <- solve(t(C) %*% C - (t(C) %*% X) %*% solve(t(X) %*% X, (t(X) %*% C)))
#MHC <- (M %*% X) %*% solve(t(X) %*% X, (t(X) %*% C))
#L.hat.ols <- M %*% C %*% A.tmp - MHC %*% A.tmp
#L.hat.ols <- M %*% orthog.x %*% C %*% solve(t(C) %*% orthog.x %*% C)
tmp.C.1 <- C.1[ind.1,] - X[ind.1,] %*% solve(t(X[ind.1,]) %*% X[ind.1,], t(X[ind.1,]) %*% C.1[ind.1,])
tmp.C.2 <- C.1[-ind.1,] - X[-ind.1,] %*% solve(t(X[-ind.1,]) %*% X[-ind.1,], t(X[-ind.1,]) %*% C.1[-ind.1,])
L.hat.ols <- M[,ind.1] %*% tmp.C.1 %*% solve(t(tmp.C.1) %*% tmp.C.1 + t(tmp.C.2) %*% tmp.C.2) + M[,-ind.1] %*% tmp.C.2 %*% solve(t(tmp.C.1) %*% tmp.C.1 + t(tmp.C.2) %*% tmp.C.2)
diff.partial <- cbind(((L.hat.scale - L)[1:floor(p * (1/n)),])^2) * n
diff.ols.1 <- (M[1:floor(p * (1/n)),ind.1] %*% orthog.1 %*% C[ind.1,] %*% solve(t(C[ind.1,]) %*% orthog.1 %*% C[ind.1,]) - L[1:(p/n),])^2 * n.1
diff.ols <- cbind(L.hat.ols[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),])^2 * n
diff.ols.partial <- cbind(L.hat.ols[1:floor(p * (1/n)),] - L.hat.scale[1:floor(p * (1/n)),])^2 * n
risk.est.partial <- sqrt(apply(diff.partial, 2, mean))
risk.est.1 <- sqrt(apply(diff.ols.1, 2, mean))
risk.est.all <- sqrt(apply(diff.ols, 2, mean))
risk.est.partial
risk.est.all
tmp.C.1 <- C[ind.1,] - X[ind.1,] %*% solve(t(X[ind.1,]) %*% X[ind.1,], t(X[ind.1,]) %*% C[ind.1,])
tmp.C.2 <- C[-ind.1,] - X[-ind.1,] %*% solve(t(X[-ind.1,]) %*% X[-ind.1,], t(X[-ind.1,]) %*% C[-ind.1,])
L.hat.ols <- M[,ind.1] %*% tmp.C.1 %*% solve(t(tmp.C.1) %*% tmp.C.1 + t(tmp.C.2) %*% tmp.C.2) + M[,-ind.1] %*% tmp.C.2 %*% solve(t(tmp.C.1) %*% tmp.C.1 + t(tmp.C.2) %*% tmp.C.2)
diff.partial <- cbind(((L.hat.scale - L)[1:floor(p * (1/n)),])^2) * n
diff.ols.1 <- (M[1:floor(p * (1/n)),ind.1] %*% orthog.1 %*% C[ind.1,] %*% solve(t(C[ind.1,]) %*% orthog.1 %*% C[ind.1,]) - L[1:(p/n),])^2 * n.1
diff.ols <- cbind(L.hat.ols[1:floor(p * (1/n)),] - L[1:floor(p * (1/n)),])^2 * n
diff.ols.partial <- cbind(L.hat.ols[1:floor(p * (1/n)),] - L.hat.scale[1:floor(p * (1/n)),])^2 * n
risk.est.partial <- sqrt(apply(diff.partial, 2, mean))
risk.est.1 <- sqrt(apply(diff.ols.1, 2, mean))
risk.est.all <- sqrt(apply(diff.ols, 2, mean))
risk.est.partial
risk.est.all
hist(sqrt(n) * (L.hat.ols.mod[,1] - L.hat.scale[,1]), main="Scaled Difference Between OLS with all data and POD")
hist(sqrt(n) * (L.hat.ols[,1] - L.hat.scale[,1]), main="Scaled Difference Between OLS with all data and POD")
hist(sqrt(n) * (L.hat.ols[,2] - L.hat.scale[,2]), main="Scaled Difference Between OLS with all data and POD")
1.064052 - 1.060636
n/p
1/sqrt(n)
1/n
1.031061 - 1.028236
t(L) %*% L
t(L) %*% L / p * n
Lambda.h
C.1 <- C[ind.1,] %*% solve(Lambda.h)
L.hat.scale[1,]
L[1,]
qqplot(rnorm(p), sqrt(n) * (L.hat.ols[,1] - L.hat.scale[,1]))
library('nlme')
library('knitr')
library('printr')
library('gtools')
library('leapp')
#install.packages("../RPackages/cate", type="source", repos=NULL)
library('esaBcv')
library('MASS')
library('ruv')
library('corpcor')
library('cate')
library('qvalue')
#library('Rmosek')
source("chunk-options.R")
source("../R/OptimizeLogLike.R")
source("../R/OptimizeLogLike_Ksigma.R")
source("../R/SimSparseData.R")
source("../R/EstimateBeta.R")
source("../R/CrudeEstDim.R")
source("../R/AnalyzeSimResults.R")
source("../R/PartialEM.R")
source("../R/UnderestimateOmega.R")
path.cov <- "/Users/Chris/Desktop/Uchicago/Nicolae/DNAMethylation/MichellesData/AmishHutterite/HAmeth_covar_60null_123015.txt"
Cov.orig <- data.frame( read.table(path.cov, sep="\t", dec=".", header=T, check.names=F) )
ind.remove <- which(is.na(Cov.orig$Other))
Cov <- Cov.orig[-ind.remove,]
n.michelle <- nrow(Cov)
ind.cell <- c(1,3,4)
Age.cutoff <- 11.5   #Pre and post pubescent
K <- length(ind.cell)
X.all <- t(model.matrix(~sex + group + as.numeric(age > Age.cutoff), data=Cov))   #A d x n design matrix
d <- nrow(X.all)
C.all <- t(as.matrix( Cov[,31:ncol(Cov)] ))/100   #number of cell types x n matrix
beta.X.all <- solve( X.all %*% t(X.all) ) %*% X.all
H.all <- t(X.all) %*% beta.X.all
Omega.OLS <- C.all %*% t(beta.X.all)     #A K x d matrix
var.OLS <- diag(C.all %*% (diag(n.michelle)-H.all) %*% t(C.all))/(n.michelle-d)
var.stand <- var.OLS/Omega.OLS[,1]/(1-Omega.OLS[,1])
C.0 <- C.all[ind.cell,]      #Tcells, Eos, Neutrophils. This contains all individuals and is a K x d matrix
Omega.start <- Omega.OLS[ind.cell,]    #A K x d matrix
sigma.cell.start <- median(sqrt(var.stand[ind.cell]))
QL.Cell <- Compute.Omega.QL(X.all, C.0, Omega.start, 1e-8)
Omega.QL <- QL.Cell$Omega     #A K x d matrix
var.cell <- QL.Cell$v
Var.Omega <- solve(QL.Cell$FI)
p <- floor(327273/10)    #Number of usuable sites in a typical experiment
n.sim <- 100   #Number of individuals
r.sim <- 0     #Number of additional confounders
K.sim <- 3     #Number of cell types
d.sim <- 1     #Number of interesting covariates (either 0 or 1)
pi0.B.sim <- rep(0.95, d.sim)    #Sparsity in B
pi0.L.sim <- c(1, 1, 0.7)    #Sparsity in L
LB.ind <- 1     #Are L and B independent? If no, the confounder Eos will have nonzero effects on the same sites as B[nonzero,1]
mu.sigma.sim <- 0.15
v.sigma.sim <- 0.03^2
beta.sigma <- mu.sigma.sim/v.sigma.sim
alpha.sigma <- beta.sigma * mu.sigma.sim     #Sigma ~ Gamma(alpha.sigma, beta.sigma)
sigma.B.sim <- rep(mu.sigma.sim, d.sim)
Omega.sim <- Omega.QL
Omega.sim[3,3] <- Omega.QL[3,3] / 1
Omega.sim[1,3] <- 0.04
Omega.sim[2,3] <- 0.02
Omega.sim <- Omega.sim[,-c(2,4)]
alpha.cell.sim <- (1/var.cell - 1)
sigma.L.sim <- c(1, 1, 1) / Omega.QL[1:3,1] * sqrt(0.15) * sqrt(3)
sigma.r.sim <- c(0.15, 0.15, 0.15, 0.15)
##Simulate Data##
SimData <- Sim.Data(n.sim, r.sim, p, pi0.B.sim, pi0.L.sim, LB.ind, sigma.B.sim, sigma.L.sim, sigma.r.sim, Omega.sim, alpha.cell.sim, alpha.sigma, beta.sigma)
M.sim <- SimData$M.sim
X.sim <- SimData$X.sim
L.sim <- SimData$L.sim
B.sim <- SimData$B.sim
Sigma.sim <- SimData$Sigma.sim
Gamma.sim <- SimData$Gamma.sim
C.sim <- SimData$C.sim    #n x K.all matrix
data.sim <- data.frame(cbind(X.sim, C.sim))
colnames(data.sim) <- c("Intercept", "Cov1", "Tcells", "Eos", "Neutro")
##Analyze data with and without cell type data##
analyzed.data <- AnalyzeData2(M.sim, data.sim, r.sim, r.sim+1, B.sim, L.sim)
##Correct estimate for alpha##
L <- analyzed.data$cate.nocell$Gamma; Sigma <- analyzed.data$cate.nocell$Sigma
alpha <- solve(t(L) %*% (L / Sigma) - p/n.sim * diag(r.sim+1)) %*% t(L / Sigma) %*% M.sim %*% X.sim %*% solve(t(X.sim) %*% X.sim)
blup.W <- alpha %*% t(X.sim) + t(analyzed.data$cate.nocell$Z) %*% (diag(n.sim) - X.sim %*% solve(t(X.sim) %*% X.sim) %*% t(X.sim))
tmp.mat <- cbind(X.sim, t(blup.W))
dof <- n.sim - ncol(tmp.mat)
beta.sim <- M.sim %*% tmp.mat %*% solve(t(tmp.mat) %*% tmp.mat)
cov.sim <- solve(t(tmp.mat) %*% tmp.mat)
p.values.sim <- 2 - 2*pt( abs(beta.sim[,2]) / sqrt(Sigma) / sqrt(cov.sim[2,2]), df=dof )
q.values.sim <- qvalue(p.values.sim)
fsr.sim <- false.sign.results(B.sim[,1], beta.sim[,2], q.values.sim$qvalue)
lines(sort(q.values.sim$qvalue), fsr.sim$fdr, col="blue")
p <- floor(327273/10)    #Number of usuable sites in a typical experiment
n.sim <- 100   #Number of individuals
r.sim <- 0     #Number of additional confounders
K.sim <- 3     #Number of cell types
d.sim <- 1     #Number of interesting covariates (either 0 or 1)
pi0.B.sim <- rep(0.95, d.sim)    #Sparsity in B
pi0.L.sim <- c(1, 1, 0.7)    #Sparsity in L
LB.ind <- 1     #Are L and B independent? If no, the confounder Eos will have nonzero effects on the same sites as B[nonzero,1]
mu.sigma.sim <- 0.15
v.sigma.sim <- 0.03^2
beta.sigma <- mu.sigma.sim/v.sigma.sim
alpha.sigma <- beta.sigma * mu.sigma.sim     #Sigma ~ Gamma(alpha.sigma, beta.sigma)
sigma.B.sim <- rep(mu.sigma.sim, d.sim)
Omega.sim <- Omega.QL
Omega.sim[3,3] <- Omega.QL[3,3] / 1
Omega.sim[1,3] <- 0.04
Omega.sim[2,3] <- 0.02
Omega.sim <- Omega.sim[,-c(2,4)]
alpha.cell.sim <- (1/var.cell - 1)
sigma.L.sim <- c(1, 1, 1) / Omega.QL[1:3,1] * sqrt(0.15) * sqrt(3)
sigma.r.sim <- c(0.15, 0.15, 0.15, 0.15)
##Simulate Data##
SimData <- Sim.Data(n.sim, r.sim, p, pi0.B.sim, pi0.L.sim, LB.ind, sigma.B.sim, sigma.L.sim, sigma.r.sim, Omega.sim, alpha.cell.sim, alpha.sigma, beta.sigma)
M.sim <- SimData$M.sim
X.sim <- SimData$X.sim
L.sim <- SimData$L.sim
B.sim <- SimData$B.sim
Sigma.sim <- SimData$Sigma.sim
Gamma.sim <- SimData$Gamma.sim
C.sim <- SimData$C.sim    #n x K.all matrix
data.sim <- data.frame(cbind(X.sim, C.sim))
colnames(data.sim) <- c("Intercept", "Cov1", "Tcells", "Eos", "Neutro")
##Analyze data with and without cell type data##
analyzed.data <- AnalyzeData2(M.sim, data.sim, r.sim, r.sim+1, B.sim, L.sim)
