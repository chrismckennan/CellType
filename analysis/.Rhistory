for (g in 1:m) {
tmp.site <- cbind(M.cell[g,])
var.g.vec[g] <- as.numeric(t(tmp.site) %*% perp.L %*% tmp.site / (n - ncol(X.L)))
}
g
which(colnames(data.LPS)=='asthma')
sum(data.LPS$asthma)
sum(as.numeric(data.LPS$asthma))
as.numeric(data.LPS$asthma)
data.LPS$asthmas
data.LPS$asthma
L[1,]
L[3,]
var.g.vec[1]
Omega
sigma
x.asthma <- cbind(c(1,0,1,0))
x.nasthma <- cbind(c(1,0,0,0))
p.asthma <- Omega %*% x.asthma
p.nasthma <- Omega %*% x.nasthma
Sigma.asthma <- diag(sigma) %*% (diag(p.asthma) - cbind(p.asthma) %*% rbind(p.asthma)) %*% diag(sigma)
Sigma.nasthma <- diag(sigma) %*% (diag(p.nasthma) - cbind(p.nasthma) %*% rbind(p.nasthma)) %*% diag(sigma)
x.asthma <- cbind(c(1,0,1,0))
x.nasthma <- cbind(c(1,0,0,0))
p.asthma <- t(Omega) %*% x.asthma
p.nasthma <- t(Omega) %*% x.nasthma
Sigma.asthma <- diag(sigma) %*% (diag(p.asthma) - cbind(p.asthma) %*% rbind(p.asthma)) %*% diag(sigma)
Sigma.nasthma <- diag(sigma) %*% (diag(p.nasthma) - cbind(p.nasthma) %*% rbind(p.nasthma)) %*% diag(sigma)
cbind(p.asthma) %*% rbind(p.asthma)
p.asthma
p.nasthma
x.asthma <- cbind(c(1,0,1,0))
x.nasthma <- cbind(c(1,0,0,0))
p.asthma <- t(Omega) %*% x.asthma
p.nasthma <- t(Omega) %*% x.nasthma
Sigma.asthma <- diag(sigma) %*% (diag(p.asthma) - p.asthma %*% t(p.asthma)) %*% diag(sigma)
Sigma.nasthma <- diag(sigma) %*% (diag(p.nasthma) - p.nasthma %*% t(p.nasthma)) %*% diag(sigma)
Sigma.asthma
Sigma.nasthma
x.asthma <- cbind(c(1,0,1,0))
x.nasthma <- cbind(c(1,0,0,0))
p.asthma <- t(Omega) %*% x.asthma
p.nasthma <- t(Omega) %*% x.nasthma
Sigma.asthma <- diag(sigma) %*% (diag(as.vector(p.asthma)) - p.asthma %*% t(p.asthma)) %*% diag(sigma)
Sigma.nasthma <- diag(sigma) %*% (diag(as.vector(p.nasthma)) - p.nasthma %*% t(p.nasthma)) %*% diag(sigma)
Sigma.asthma
Sigma.nasthma
l.1 <- L[1,]
l.1 <- cbind(L[1,])
t(l.1) %*% Sigma.asthma %*% l.1
var.g.vec[1]
which.max(L[,1])
L[276253]
L[276253,]
l.1 <- cbind(L[276253,])
L[1,]
L[2,]
L[3,]
beta.L[1,]
M.cell[1,]
Omega
l.1
t(l.1) %*% Sigma.asthma %*% l.1
Sigma.asthma
sqrt(0.0012899966)
var.g.vec[276253]
beta.L[1,]
hist(beta.L[,6])
hist(beta.L[,2])
hist(beta.L[,3])
hist(beta.L[,4])
plot(H.L %*% M.cell[1,], perp.L %*% M.cell[1,])
plot(H.L %*% M.cell[276253,], perp.L %*% M.cell[276253,])
hist(beta.L[,5])
m <- nrow(M.cell)
X.L <- model.matrix(~Tcell.act + Eos.act + Neut.act, data=data.LPS)
beta.op.L <- solve(t(X.L) %*% X.L, t(X.L))
H.L <- X.L %*% solve(t(X.L) %*% X.L, t(X.L))
perp.L <- diag(n) - H.L
beta.L <- M.cell %*% t(beta.op.L)
L <- beta.L[,2:4]
hist(L[,1])
hist(L[,2])
hist(L[,3])
colnames(Y.mat)
hist(beta.L[,5])
dim(beta.L)
pool.cells <- c('Bcell.act')
C <- Y.mat[,! colnames(Y.mat) %in% pool.cells]
C[,which(colnames(C)=='Other.act')] = C[,which(colnames(C)=='Other.act')] + apply(Y.mat[,colnames(Y.mat) %in% pool.cells], 1, sum)
C <- C[,-which(colnames(C)=='Other.act')]/100   #C is cell type matrix to be used in optimization
Omega.0 <- beta.mat[,! colnames(Y.mat) %in% pool.cells]/100
Omega.0 <- Omega.0[,-which(colnames(Omega.0)=='Other.act')]
age.cutoff <- 11    ##People ages <= age.cutoff are in one group, > age.cutoff are in another (pre-puberty and puberty)
X <- as.matrix(model.matrix(~sex + asthma + as.numeric(Age > age.cutoff), data=data.LPS))
C
Y.mat
pool.cells <- c('Bcell.act')
C <- Y.mat[,! colnames(Y.mat) %in% pool.cells]
C
C[,which(colnames(C)=='Other.act')] = C[,which(colnames(C)=='Other.act')] + apply(Y.mat[,colnames(Y.mat) %in% pool.cells], 1, sum)
which(colnames(C)=='Other.act')
colnames(Y.mat) %in% pool.cells
Y.mat[,colnames(Y.mat) %in% pool.cells]
apply(cbind(Y.mat[,colnames(Y.mat) %in% pool.cells]), 1, sum)
pool.cells <- c('Bcell.act')
C <- Y.mat[,! colnames(Y.mat) %in% pool.cells]
C[,which(colnames(C)=='Other.act')] = C[,which(colnames(C)=='Other.act')] + apply(cbind(Y.mat[,colnames(Y.mat) %in% pool.cells]), 1, sum)
C <- C[,-which(colnames(C)=='Other.act')]/100   #C is cell type matrix to be used in optimization
Omega.0 <- beta.mat[,! colnames(Y.mat) %in% pool.cells]/100
Omega.0 <- Omega.0[,-which(colnames(Omega.0)=='Other.act')]
age.cutoff <- 11    ##People ages <= age.cutoff are in one group, > age.cutoff are in another (pre-puberty and puberty)
X <- as.matrix(model.matrix(~sex + asthma + as.numeric(Age > age.cutoff), data=data.LPS))
C
Omega.0
sigma2.0
n <- nrow(X)
d <- ncol(X)
K <- ncol(C)
grad.tol <- 1e-10   #Gradient tolerance
ML <- MaxLike.NewtonLS_Ksigma(X, C, Omega.0, rep(sigma2.0^0.5,K), grad.tol)
ML$sigma
Omega <- ML$Omega
Omega
Omega.0
FI <- ML$I     #Fisher information matrix at optimum
cov.theta <- solve(FI)
sigma
FI <- ML$I     #Fisher information matrix at optimum
cov.theta <- solve(FI)
sigma <- ML$sigma
sigma
0.0546661*sqrt(5.124822e-03*(1-5.124822e-03))
5.124822e-03
0.005124822/0.003903389
pnorm(1.312916)
mean.cell <- X %*% Omega
stand.Omega <- Omega/matrix(sqrt(diag(cov.theta)[1:(d*K)]), nrow=d, ncol=K)
sd.Omega <- matrix(sqrt(diag(cov.theta)[1:(d*K)]), nrow=d, ncol=K)
colnames(sd.Omega) <- colnames(Omega)
rownames(sd.Omega) <- rownames(Omega)
tmp.sigma <- matrix(sigma, nrow=1, ncol=K)
colnames(tmp.sigma) <- paste0('sigma_', as.character((1:K)))
tmp.pred.sigma <- rbind(Omega[1,])/(sqrt(rbind(Omega[1,]*(1-Omega[1,]))) * tmp.sigma)
knitr::kable(tmp.sigma, digits=4, caption="Estimates for sigma's", longtable=F)
knitr::kable(tmp.pred.sigma, digits=4, caption="Standardized Intercepts (i.e. how accurate is our prediction)", longtable=F)
knitr::kable(head(Omega.0), digits = 4, caption = "Omega using Univariate OLS", longtable=F)
knitr::kable(head(Omega), digits = 4, caption = "Omega using Multivariate Maximum Likelihood", longtable=F)
t.scores.table <- t.scores[,! colnames(Y.mat) %in% c('Other.act', pool.cells)]
colnames(t.scores.table) <- colnames(Omega)
rownames(t.scores.table) <- rownames(Omega)
knitr::kable(head(sd.Omega), digits = 4, caption = "SD of Estimated Effects using Fisher Information of ML Estimate", longtable=F)
knitr::kable(head(stand.Omega), digits = 4, caption = "Standardized Effects using Fisher Information of ML Estimate", longtable=F)
Resid <- C - mean.cell
Stand.Resid <- C - mean.cell
for (i in 1:n) {
p.i <- mean.cell[i,]
Sigma.i <- diag(sigma) %*% (diag(p.i) - cbind(p.i) %*% rbind(p.i)) %*% diag(sigma)
R.i <- chol(Sigma.i)   #R.i'R.i = Sigma.i
Stand.Resid[i,] = as.vector( solve(t(R.i), Resid[i,]) )   #Standardized residuals should be iid N(0,1)
}
precision.wish <- n
t(Stand.Resid) %*% Stand.Resid/precision.wish
sigma
sigma.0.vec
sigma2.vec
sigma^2
m <- nrow(M.cell)
X.L <- model.matrix(~Tcell.act + Eos.act + Neut.act + Mono.act + asthma + sex + as.numeric(Age > age.cutoff), data=data.LPS)
beta.op.L <- solve(t(X.L) %*% X.L, t(X.L))
H.L <- X.L %*% solve(t(X.L) %*% X.L, t(X.L))
perp.L <- diag(n) - H.L
beta.L <- M.cell %*% t(beta.op.L)
L <- beta.L[,2:5]
hist(L[,4])
Omega
m <- nrow(M.cell)
X.L <- model.matrix(~Tcell.act + Eos.act + Neut.act + Mono.act + Bcell.act + asthma + sex + as.numeric(Age > age.cutoff), data=data.LPS)
beta.op.L <- solve(t(X.L) %*% X.L, t(X.L))
H.L <- X.L %*% solve(t(X.L) %*% X.L, t(X.L))
perp.L <- diag(n) - H.L
beta.L <- M.cell %*% t(beta.op.L)
L <- beta.L[,2:6]
hist(beta.L[,6])
hist(L[,5])
hist(beta.L[,8])
eigen(t(Stand.Resid) %*% Stand.Resid/precision.wish)$values
precision.wish <- n
mean.detW <- exp( sum(log( (precision.wish:(precision.wish - K + 1)) )) ) * precision.wish^(-K)
disp <- (det(t(Stand.Resid) %*% Stand.Resid/precision.wish) / mean.detW)^(1/K)
disp
n/K
tmp.vec<-rep(0,1000); for (b in 1:1000) {tmp.mat <- matrix(rnorm(n*K),nrow=r,ncol=K); tmp.vec[b]=eigen(t(tmp.mat) %*% tmp.mat/n)$values[K]}
tmp.vec<-rep(0,1000); for (b in 1:1000) {tmp.mat <- matrix(rnorm(n*K),nrow=n,ncol=K); tmp.vec[b]=eigen(t(tmp.mat) %*% tmp.mat/n)$values[K]}
min(tmp.vec)
max(tmp.vec)
tmp.vec2<-rep(0,1000); for (b in 1:1000) {tmp.mat <- matrix(rnorm(n*K),nrow=n,ncol=K); tmp.vec2[b]=eigen(t(tmp.mat) %*% tmp.mat/n)$values[1]}
max(tmp.vec2)
min(tmp.vec2)
m <- nrow(M.cell)
X.L <- model.matrix(~Tcell.act + Eos.act + Neut.act + Mono.act + asthma + sex + as.numeric(Age > age.cutoff), data=data.LPS)
beta.op.L <- solve(t(X.L) %*% X.L, t(X.L))
H.L <- X.L %*% solve(t(X.L) %*% X.L, t(X.L))
perp.L <- diag(n) - H.L
beta.L <- M.cell %*% t(beta.op.L)
L <- beta.L[,2:6]    #In the orderof Tcell, Eosinophil, Neutrophil
var.g.vec <- rep(0, m)     #An estimate of sigma^2_g for each site g = 1,...,p
for (g in 1:m) {
tmp.site <- cbind(M.cell[g,])
var.g.vec[g] <- as.numeric(t(tmp.site) %*% perp.L %*% tmp.site / (n - ncol(X.L)))
}
x.asthma <- cbind(c(1,0,1,0))
x.nasthma <- cbind(c(1,0,0,0))
p.asthma <- t(Omega) %*% x.asthma
p.nasthma <- t(Omega) %*% x.nasthma
Sigma.asthma <- diag(sigma) %*% (diag(as.vector(p.asthma)) - p.asthma %*% t(p.asthma)) %*% diag(sigma)
Sigma.nasthma <- diag(sigma) %*% (diag(as.vector(p.nasthma)) - p.nasthma %*% t(p.nasthma)) %*% diag(sigma)
var.cell.asthma <- rep(0,m)    #l' Sigma_asthma l
var.cell.nasthma <- rep(0,m)    #l' Sigma_noasthma l
for (g in 1:m) {
l.g <- cbind(L[g,])
var.cell.asthma[g] <- t(l.g) %*% Sigma.asthma %*% l.g
var.cell.nasthma[g] <- t(l.g) %*% Sigma.nasthma %*% l.g
}
dim(L)
L <- beta.L[,2:5]
x.asthma <- cbind(c(1,0,1,0))
x.nasthma <- cbind(c(1,0,0,0))
p.asthma <- t(Omega) %*% x.asthma
p.nasthma <- t(Omega) %*% x.nasthma
Sigma.asthma <- diag(sigma) %*% (diag(as.vector(p.asthma)) - p.asthma %*% t(p.asthma)) %*% diag(sigma)
Sigma.nasthma <- diag(sigma) %*% (diag(as.vector(p.nasthma)) - p.nasthma %*% t(p.nasthma)) %*% diag(sigma)
Sigma.asthma
Sigma.nasthma
chol(Sigma.asthma)
var.cell.asthma <- rep(0,m)    #l' Sigma_asthma l
var.cell.nasthma <- rep(0,m)    #l' Sigma_noasthma l
for (g in 1:m) {
l.g <- cbind(L[g,])
var.cell.asthma[g] <- t(l.g) %*% Sigma.asthma %*% l.g
var.cell.nasthma[g] <- t(l.g) %*% Sigma.nasthma %*% l.g
}
hist(var.g.vec/(var.g.vec + var.cell.asthma))
dim(beta.values)
col.use <- match(ind.ids.cell, ind.ids.covar)
beta.cell <- beta.values[,col.use]
M.cell <- log(beta.cell/(1-beta.cell))
m <- nrow(M.cell); n <- ncol(M.cell)  #m = #CpG sites; n = #individuals
model.mat <- model.matrix(~Tcell.act + Bcell.act + Eos.act + Neut.act + Mono.act + asthma, data=data.LPS)
beta.op <- solve(t(model.mat) %*% model.mat, t(model.mat))
H <- model.mat %*% beta.op
H.perp <- diag(1,nrow(H)) - H
coef.M <- beta.op %*% t(M.cell)
coef.beta <- beta.op %*% t(beta.cell)
var.mat <- solve(t(model.mat) %*% model.mat)
var.mat
model.mat[,3]
dim(coef.beta)
coef.beta[,1]
model.mat[,2]
model.mat[,4]
p=1
tmp.site <- cbind(M.cell[p,])
tmp.site
t(tmp.site) %*% H.perp %*% tmp.site/(n - ncol(model.mat))
var.effects <- rep(NA, m)
stand.effects <- array(NA, dim=dim(coef.M))
p=1
var.effects[p] <- t(tmp.site) %*% H.perp %*% tmp.site/(n - ncol(model.mat))
1/sqrt(var.effects[p]) * diag(1/sqrt(diag(var.mat))) %*% cbind(coef.M[,p])
col.use <- match(ind.ids.cell, ind.ids.covar)
beta.cell <- beta.values[,col.use]
M.cell <- log(beta.cell/(1-beta.cell))
m <- nrow(M.cell); n <- ncol(M.cell)  #m = #CpG sites; n = #individuals
model.mat <- model.matrix(~Tcell.act + Bcell.act + Eos.act + Neut.act + Mono.act + asthma + sex, data=data.LPS)
beta.op <- solve(t(model.mat) %*% model.mat, t(model.mat))
H <- model.mat %*% beta.op
H.perp <- diag(1,nrow(H)) - H
coef.M <- beta.op %*% t(M.cell)
coef.beta <- beta.op %*% t(beta.cell)
var.mat <- solve(t(model.mat) %*% model.mat)
var.effects <- rep(NA, m)
stand.effects <- array(NA, dim=dim(coef.M))
p=1
tmp.site <- cbind(M.cell[p,])
var.effects[p] <- t(tmp.site) %*% H.perp %*% tmp.site/(n - ncol(model.mat))
stand.effects[,p] <- 1/sqrt(var.effects[p]) * diag(1/sqrt(diag(var.mat))) %*% cbind(coef.M[,p])
1/sqrt(var.effects[p]) * diag(1/sqrt(diag(var.mat))) %*% cbind(coef.M[,p])
for (p in 1:m) {
tmp.site <- cbind(M.cell[p,])
var.effects[p] <- t(tmp.site) %*% H.perp %*% tmp.site/(n - ncol(model.mat))
stand.effects[,p] <- 1/sqrt(var.effects[p]) * diag(1/sqrt(diag(var.mat))) %*% cbind(coef.M[,p])
}
hist(stand.effects[,8])
dim(stad.effects)
dim(stand.effects)
hist(stand.effects[8,])
hist(stand.effects[8,], prob=T)
x.plot <- seq(-4,4,length=1000)
lines(x.plot,dnorm(x.plot,mean=mean(stand.effects[8,]), sd=sd(stand.effects[8,])))
sd(stand.effects[8,])
beta.disease <- stand.effects[7,]   #My disease effects. These are quite large in comparison to the cell effects
hist(beta.disease, xlab='Standardized Asthma Effect Coefficient at CpG site', main='M-values Regressed onto Sex, Asthma status and Cell type', breaks=90)
beta.disease <- stand.effects[7,]   #My disease effects. These are quite large in comparison to the cell effects
hist(beta.disease, xlab='Standardized Asthma Effect Coefficient at CpG site', main='M-values Regressed onto Sex, Asthma status and Cell type', breaks=90)
hist(stand.effects[8,], xlab='Standardized Sex Effect Coefficient at CpG site', main='M-values Regressed onto Sex, Asthma status and Cell type', breaks=90)
hist(stand.effects[2,], xlab='Standardized Tcell Coefficient at CpG site', main='M-values Regressed onto Sex, Asthma status and Cell type', breaks=90)
hist(stand.effects[3,], xlab='Standardized Bcell Coefficient at CpG site', main='M-values Regressed onto Sex, Asthma status and Cell type', breaks=90)
hist(stand.effects[4,], xlab='Standardized Eos cell Coefficient at CpG site', main='M-values Regressed onto Sex, Asthma status and Cell type', breaks=90)
hist(stand.effects[5,], xlab='Standardized Neutrophil Coefficient at CpG site', main='M-values Regressed onto Sex, Asthma status and Cell type', breaks=90)
hist(stand.effects[6,], xlab='Standardized Monocyte Coefficient at CpG site', main='M-values Regressed onto Sex, Asthma status and Cell type', breaks=90)
Omega
ML <- MaxLike.NewtonLS_Ksigma(X, C, Omega.0, rep(sigma2.0^0.5,K), grad.tol)
ML$n.iter
source("chunk-options.R")
source("../R/OptimizeLogLike.R")
source("../R/OptimizeLogLike_Ksigma.R")
ML <- MaxLike.NewtonLS_Ksigma(X, C, Omega.0, rep(sigma2.0^0.5,K), grad.tol)
ML$n.iter
dim(L)
LO <- L %*% t(Omega)
B <- beta.L[,6:8]
B[1,]
LO[1,]
dim(FI)
sigma
FI[1,]
diag(solve(FI))
sqrt(6.382841e-05)
0.0546661/sqrt(6.382841e-05)
sqrt(3.641730e-04)
CompLogLike_Ksigma(X,C,Omega,sigma)
CompLogLike_Ksigma(X,C,Omega,sigma2.0)
CompLogLike_Ksigma(X,C,Omega,sqrt(sigma2.0))
hist(var.g.vec/(var.g.vec + var.cell.asthma), main="Relative Variance of Residuals", ylab="Frequency", xlab="sigma_g^2/(sigma_g^2 + alpha_asthma)")
X.L <- model.matrix(~Tcell.act + Eos.act + Neut.act + Mono.act*asthma + asthma + sex + as.numeric(Age > age.cutoff), data=data.LPS)
dim(X.L)
colnames(X.L)
beta.op.L <- solve(t(X.L) %*% X.L, t(X.L))
H.L <- X.L %*% solve(t(X.L) %*% X.L, t(X.L))
perp.L <- diag(n) - H.L
beta.L <- M.cell %*% t(beta.op.L)
dim(beta.L)
beta.L[1,]
beta.L[2,]
beta.L[3,]
hist(H.L %*% beta.L[3,], perp.L %*% beta.L[3,])
hist(H.L %*% M.cell[3,], perp.L %*% M.cell[3,])
plot(H.L %*% M.cell[3,], perp.L %*% M.cell[3,])
plot(H.L %*% M.cell[4,], perp.L %*% M.cell[4,])
plot(H.L %*% M.cell[5,], perp.L %*% M.cell[5,])
beta.L[5,]
beta.L[6,]
X.L <- model.matrix(~Tcell.act + Eos.act + Neut.act + Mono.act + asthma + sex + as.numeric(Age > age.cutoff), data=data.LPS)
beta.op.L <- solve(t(X.L) %*% X.L, t(X.L))
H.L <- X.L %*% solve(t(X.L) %*% X.L, t(X.L))
perp.L <- diag(n) - H.L
beta.L <- M.cell %*% t(beta.op.L)
beta.L[6,]
beta.L[7,]
hist(beta.L[,6])
m <- nrow(M.cell)
X.L <- model.matrix(~Tcell.act + Eos.act + Neut.act + Mono.act + asthma + sex + as.numeric(Age > age.cutoff), data=data.LPS)
beta.op.L <- solve(t(X.L) %*% X.L, t(X.L))
H.L <- X.L %*% solve(t(X.L) %*% X.L, t(X.L))
perp.L <- diag(n) - H.L
beta.L <- M.cell %*% t(beta.op.L)
L <- beta.L[,2:5]    #In the orderof Tcell, Eosinophil, Neutrophil, Monocyte
LO <- L %*% t(Omega)
LO[1,]
LO[2,]
B[2,]
g<-1
sqrt( sum(LO[g,2:ncol(LO)] * LO[g,2:ncol(LO)])/(sum(LO[g,2:ncol(LO)] * LO[g,2:ncol(LO)]) + sum(B[g,] * B[g,])) )
sum(LO[g,2:ncol(LO)] * LO[g,2:ncol(LO)]) + sum(B[g,] * B[g,])
sum(LO[g,2:ncol(LO)] * LO[g,2:ncol(LO)])
prop.effect <- rep(0, m)
for (g in 1:m) {
prop.effect[g] <- sqrt( sum(LO[g,2:ncol(LO)] * LO[g,2:ncol(LO)])/(sum(LO[g,2:ncol(LO)] * LO[g,2:ncol(LO)]) + sum(B[g,] * B[g,])) )
}
hist(prop.effect)
hist(prop.effect, breaks=90)
which.max(prop.effect)
B[46343,]
LO[46343,]
g <- which.max(prop.effect)
sum(LO[g,2:ncol(LO)] * LO[g,2:ncol(LO)])
sum(LO[g,2:ncol(LO)] * LO[g,2:ncol(LO)]) + sum(B[g,] * B[g,]))
sum(LO[g,2:ncol(LO)] * LO[g,2:ncol(LO)]) + sum(B[g,] * B[g,])
sum(B[g,] * B[g,])
B[g,]
LO[g,]
Omega
hist(prop.effect, breaks=90, main="Propotion of Effect Explained by Cell Type", xlab="Proportion of Effect Explained by Cell Type", ylab="Frequency")
B[g,]
LO[g,]
prop.effect <- rep(0, m)
for (g in 1:m) {
prop.effect[g] <- sqrt( sum(LO[g,2:ncol(LO)] * LO[g,2:ncol(LO)])/sum( c(LO[g,2:ncol(LO)], B[g,])*c(LO[g,2:ncol(LO)], B[g,]) ) )
}
hist(prop.effect, breaks=90, main="Propotion of Effect Explained by Cell Type", xlab="Proportion of Effect Explained by Cell Type", ylab="Frequency")
pnorm(1.3)
dim(L)
hist(L[,1])
mean(L[,1])
mean(L[,2])
mean(L[,3])
mean(L[,4])
hist(L[,4])
hist(L[,4], breaks=90)
colnames(L)
hist(L[,3], breaks=90)
source("chunk-options.R")
source("../R/OptimizeLogLike.R")
source("../R/OptimizeLogLike_Ksigma.R")
source("chunk-options.R")
source("../R/OptimizeLogLike.R")
source("../R/OptimizeLogLike_Ksigma.R")
library(minfi)
library('IlluminaHumanMethylation450kmanifest')
library('IlluminaHumanMethylation450kanno.ilmn12.hg19')
library('FlowSorted.Blood.450k')      ##Methylation data on 6 males, 10 cell types; RGset object
library('RefFreeEWAS')
library('nlme')
library('corpcor')
library('sva')
library('knitr')
library('printr')
path.LPS.kids <- '/Users/Chris/Desktop/Uchicago/Nicolae/DNAMethylation/MichellesData/HTkids_cellprop/HTkids_LPS_covar_ImpAct_10115.txt'
path.methylation <- '/Users/Chris/Desktop/Uchicago/Nicolae/DNAMethylation/MichellesData/Hutterite_Methylation_data/Meth_covar_allsamp_impcells_10115.txt'
data.cov <- data.frame(read.table(path.methylation, sep="\t", quote="\"", dec=".", header=T, check.names=F))
data.LPS <- data.frame(read.table(path.LPS.kids, sep="\t", quote="\"", dec=".", header=T, check.names=F))
cell.names <- colnames(data.LPS)[(ncol(data.LPS) - 5):ncol(data.LPS)]
n.cells <- length(cell.names)
n.ind <- nrow(data.LPS)
ind.ids.cell <- data.LPS$Rowid    #IDs of individuals with cell type data
ind.ids.covar <- data.cov$Rowid
age.cutoff <- 11    ##People ages <= age.cutoff are in one group, > age.cutoff are in another (pre-puberty and puberty)
model.mat.cov <- model.matrix(~sex + asthma + as.numeric(Age > age.cutoff), data=data.LPS)
beta.op.cov <- solve(t(model.mat.cov) %*% model.mat.cov, t(model.mat.cov))
H.cov <- model.mat.cov %*% solve(t(model.mat.cov) %*% model.mat.cov, t(model.mat.cov))
Y.mat <- as.matrix(data.LPS[,(ncol(data.LPS) - 5):ncol(data.LPS)])
Y.mat.hat <- H.cov %*% Y.mat
beta.mat <- beta.op.cov %*% Y.mat
var.vec <- diag( t(Y.mat) %*% Y.mat - t(Y.mat) %*% Y.mat.hat)/(n.ind - ncol(model.mat.cov))
i = 3
plot(Y.mat.hat[,i], Y.mat[,i], xlim=range(Y.mat.hat[,i], Y.mat[,i]), ylim=range(Y.mat.hat[,i], Y.mat[,i]))
lines(seq(0,100, 100), seq(0, 100, 100))
var.beta.hat <- diag(1/diag(solve(t(model.mat.cov) %*% model.mat.cov)))
t.scores <- sqrt(var.beta.hat) %*% beta.mat %*% diag(1/sqrt(var.vec))
var.OLS <- var.vec/1e4    #Michelle's proportions were given in %
ave.hat <- apply(Y.mat.hat, 2, mean)/100   #Average predicted proportion = average measured cell type proportion across individuals
sigma2.vec <- var.OLS/ave.hat/(1-ave.hat)
sigma2.0 <- median(sigma2.vec)   #Starting value of sigma^2 for optimization procedure. It corresponds to about 38 observations (a little small, although enough to make the ).
pool.cells <- c('Bcell.act')
C <- Y.mat[,! colnames(Y.mat) %in% pool.cells]
C[,which(colnames(C)=='Other.act')] = C[,which(colnames(C)=='Other.act')] + apply(cbind(Y.mat[,colnames(Y.mat) %in% pool.cells]), 1, sum)
C <- C[,-which(colnames(C)=='Other.act')]/100   #C is cell type matrix to be used in optimization
Omega.0 <- beta.mat[,! colnames(Y.mat) %in% pool.cells]/100
Omega.0 <- Omega.0[,-which(colnames(Omega.0)=='Other.act')]
age.cutoff <- 11    ##People ages <= age.cutoff are in one group, > age.cutoff are in another (pre-puberty and puberty)
X <- as.matrix(model.matrix(~sex + asthma + as.numeric(Age > age.cutoff), data=data.LPS))
Omega.0
n <- nrow(X)
d <- ncol(X)
K <- ncol(C)
grad.tol <- 1e-10   #Gradient tolerance
ML <- MaxLike.NewtonLS_Ksigma(X, C, Omega.0, rep(sigma2.0^0.5,K), grad.tol)
Omega <- ML$Omega
Omega.ols <- Omega
Omega
Omega.0
Omega.0[,1] = Omega.0[,1] + 0.2
ML <- MaxLike.NewtonLS_Ksigma(X, C, Omega.0, rep(sigma2.0^0.5,K), grad.tol)
Omega.0
Omega.0 <- beta.mat[,! colnames(Y.mat) %in% pool.cells]/100
Omega.0 <- Omega.0[,-which(colnames(Omega.0)=='Other.act')]
Omega.0
source("chunk-options.R")
source("../R/OptimizeLogLike.R")
source("../R/OptimizeLogLike_Ksigma.R")
Omega.0
ML <- MaxLike.NewtonLS_Ksigma(X, C, Omega.0, rep(sigma2.0^0.5,K), grad.tol)
Omega.0[1,1] <- Omega.0[1,1] + 0.2
ML <- MaxLike.NewtonLS_Ksigma(X, C, Omega.0, rep(sigma2.0^0.5,K), grad.tol)
source("chunk-options.R")
source("../R/OptimizeLogLike.R")
source("../R/OptimizeLogLike_Ksigma.R")
ML <- MaxLike.NewtonLS_Ksigma(X, C, Omega.0, rep(sigma2.0^0.5,K), grad.tol)
ML$Omega
Omega
Omega.0
Omega.0[1,3] <- Omega.0[1,3] + 0.1
ML <- MaxLike.NewtonLS_Ksigma(X, C, Omega.0, rep(sigma2.0^0.5,K), grad.tol)
ML$Omega
Omega
Omega.ols
Omega.0
Omega.0[4,4] <- Omega.0[4,4] + 0.2
Oemga.0
Omega.0
ML <- MaxLike.NewtonLS_Ksigma(X, C, Omega.0, rep(sigma2.0^0.5,K), grad.tol)
ML$count
ML$n.iter
Omega.0
Omega.0[4,4] <- Omega.0[4,4] - 0.1
Omega.0
Omega.0[4,4] <- Omega.0[4,4] - 0.05
Omega.0
ML <- MaxLike.NewtonLS_Ksigma(X, C, Omega.0, rep(sigma2.0^0.5,K), grad.tol)
Omega.0[4,4] <- Omega.0[4,4] + 0.05
ML <- MaxLike.NewtonLS_Ksigma(X, C, Omega.0, rep(sigma2.0^0.5,K), grad.tol)
